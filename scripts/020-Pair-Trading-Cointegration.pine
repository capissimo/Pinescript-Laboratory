// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© capissimo

//@version=5
indicator("Pair Trading - Cointegration", '', false, timeframe="", timeframe_gaps=true)

//-- Cointegration Module - cointegration-based pair trading --//

// There are three popular styles of Pair trading:
//
// * COINTEGRATION-based pair trading
// * Correlation-based pair trading
// * Distance-based pair trading

// The Cointegration strategy is to short the outperforming instrument and go long on the underperforming instrument 
// whenever the temporary correlation weakens which means one instrument going up and another going down.
// Here, instead of two different instruments two timeframes of the same instrument are used, lower and higher. 

//-- Inputs

Asset1Symbol = input.symbol('NQ1!', 'Asset #1', inline='a1')
Asset2Symbol = input.symbol('ES',   'Asset #2', inline='a2')
Asset1Period = input.int   (2,      'p:', 1, inline='a1')  
Asset2Period = input.int   (4,      'p:', 2, inline='a2')  
IsReversed   = input.bool  (false,  'Reverse', inline='b')
Averaging    = input.string('SMA',  'Ratio Averaging',   ['WMA','SMA','HMA','EMA','RMA','SWMA','VWAP','ALMA'], inline='m')
Period       = input.int   (5,      'p:', 1, inline='m')
Multiplier   = input.float (1.,     'Multiplier [0.01...2.0]', minval=0.01, maxval=2.0, step=0.01)
Threshold    = input.float (0.0,    'Threshold [-1.0..1.0]',   minval=-1.0, maxval=1.0, step=.01)

//-- Constants

int BUY = 1, int SELL = -1, int CLEAR = 0

//-- Series

var int signal = CLEAR

//-- Functions

method getMA(float ds, simple int p, string ma) => 
    switch ma
        'WMA'  => ta.wma(ds, p) 
        'RMA'  => ta.rma(ds, p) 
        'EMA'  => ta.ema(ds, p) 
        'HMA'  => ta.hma(ds, p) 
        'SWMA' => ta.swma(ds) 
        'VWAP' => ta.vwap(ds) 
        'ALMA' => ta.alma(ds, p, 0.35, 6) 
        'SMA'  => ta.sma(ds, p)
       
//-- Logic

X = request.security(Asset1Symbol, '', close[barstate.isrealtime?1:0])
Y = request.security(Asset2Symbol, '', close[barstate.isrealtime?1:0])

float ratio  = IsReversed ? math.log(Y) / math.log(X) : math.log(X) / math.log(Y)  
float mean   = ratio.getMA(Period, Averaging)
float std    = ta.stdev(ratio, Period)
float zscore = (ratio - mean) / std 
float ubound = mean + std * Multiplier
float lbound = mean - std * Multiplier

signal := ratio > ubound+Threshold ? SELL : ratio < lbound-Threshold ? BUY : nz(signal[1]) 

bool longCondition  = bool(ta.change(signal)) and signal==BUY
bool shortCondition = bool(ta.change(signal)) and signal==SELL

//-- Visuals

plot(.0,     '', color.silver)
plot(.2,     '', color.orange)
plot(-.2,    '', color.orange)
plot(BUY,    '', color.red)
plot(SELL,   '', color.green)

plot(zscore, '', color.blue)
plot(longCondition  ? zscore : na, '', color.green, 3, plot.style_circles)
plot(shortCondition ? zscore : na, '', color.red,   3, plot.style_circles)

//-- Notification

alertcondition(longCondition,  'Buy',  'Go long!')
alertcondition(shortCondition, 'Sell', 'Go short!') 
alertcondition(longCondition or shortCondition, 'Alert', 'Deal Time!')
